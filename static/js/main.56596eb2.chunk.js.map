{"version":3,"sources":["swap/utils/pubkeys.ts","swap/components/context/TokenList.tsx","swap/components/context/Dex.tsx","swap/components/context/Swap.tsx","swap/components/context/Mint.tsx","swap/utils/tokens.ts","swap/components/context/Token.tsx","swap/components/TokenDialog.tsx","swap/components/Settings.tsx","swap/components/Info.tsx","swap/components/Swap.tsx","swap/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SRM_MINT","PublicKey","USDC_MINT","USDT_MINT","DEX_PID","_TokenListContext","React","createContext","TokenListContextProvider","props","Provider","value","tokenList","children","useTokenList","ctx","useContext","Error","getList","_DexContext","DexContextProvider","useState","Map","ooAccounts","setOoAccounts","marketCache","setMarketCache","orderbookCache","setOrderbookCache","swapClient","useEffect","OpenOrders","findForOwner","program","provider","connection","wallet","publicKey","then","openOrders","a","newOoAccounts","markets","Set","forEach","oo","add","market","toString","get","push","set","size","anchor","getMultipleAccounts","map","m","marketAccounts","programAccount","account","Market","getLayout","decode","data","opts","newMarketCache","useDexContext","useMarket","asyncMarket","useAsync","undefined","load","marketClient","cache","result","useFair","orderbook","asyncOrderbook","Promise","all","loadBids","loadAsks","bids","asks","useOrderbook","bestBid","items","next","bestOffer","price","_SwapContext","SwapContextProvider","fromMint","setFromMint","toMint","setToMint","fromAmount","_setFromAmount","toAmount","_setToAmount","slippage","setSlippage","fairOverride","setFairOverride","fair","_useSwapFair","setFromAmount","amount","setToAmount","swapToFromMints","oldFrom","oldFromAmount","oldToAmount","useSwapContext","useSwapFair","fairRoute","route","useMemo","fromFair","fromMarket","toFair","length","baseMintAddress","equals","useFairRoute","_MintContext","MintContextProvider","mintCache","setMintCache","useMint","mint","asyncMintInfo","mintClient","Token","TOKEN_PROGRAM_ID","Account","getMintInfo","mintInfo","filters","getOwnedAccountsFilters","_rpcRequest","toBase58","commitment","resp","error","message","pubkey","executable","owner","lamports","accountInfo","bs58","filter","every","dataSize","memcmp","filterBytes","bytes","slice","offset","parseTokenAccountData","ACCOUNT_LAYOUT","BufferLayout","BN","offsetOf","span","_TokenContext","TokenContextProvider","ownedTokenAccounts","setOwnedTokenAccounts","getOwnedTokenAccounts","useStyles","makeStyles","dialogContent","paddingTop","textField","width","border","borderRadius","marginBottom","TokenDialog","open","onClose","setMint","tokenFilter","setTokenFilter","styles","Dialog","PaperProps","style","DialogTitle","fontWeight","DialogContent","className","TextField","placeholder","onChange","e","target","InputProps","disableUnderline","padding","List","disablePadding","tokens","concat","TokenListItem","onClick","ListItem","button","TokenIcon","TokenName","tokenInfo","t","address","marginLeft","Typography","symbol","color","fontSize","name","tab","table","settingsButton","SettingsButton","variant","popupState","IconButton","bindTrigger","Popover","bindPopover","anchorOrigin","vertical","horizontal","transformOrigin","SettingsDetails","showSettingsDialog","setShowSettingsDialog","marginTop","type","parseFloat","display","justifyContent","flexDirection","endAdornment","InputAdornment","position","marginRight","flex","disabled","ToggleButton","selected","console","paddingBottom","paddingLeft","paddingRight","Button","background","SettingsDialog","maxWidth","height","right","top","Close","OpenOrdersAccounts","TableContainer","component","Paper","elevation","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","Array","from","entries","oos","OpenOrdersRow","ooAccount","setOoAccount","base","quote","quoteMintAddress","baseTicker","quoteTicker","marketName","settleDisabled","baseTokenFree","toNumber","quoteTokenFree","closeDisabled","baseTokenTotal","quoteTokenTotal","settleFunds","closeOpenOrders","scope","Link","href","rel","Select","MenuItem","toDisplay","sub","decimals","toFixed","theme","infoLabel","fairPriceLabel","palette","text","secondary","infoButton","InfoLabel","fromMintInfo","fromTokenInfo","toTokenInfo","InfoButton","Info","disableRestoreFocus","InfoDetails","fromMintTicker","toMintTicker","addresses","ticker","MarketRoute","overflow","useMarketName","card","cardContent","swapButton","swapToFromButton","SwapCard","Card","SwapHeader","SwapFromForm","ArrowButton","SwapToForm","SwapButton","margin","SwapTokenForm","setAmount","showTokenDialog","setShowTokenDialog","tokenAccount","tokenAccounts","sort","b","useOwnedTokenAccount","mintAccount","TokenButton","ExpandMore","logoURI","alt","src","toMintInfo","sendSwapTransaction","muln","minExpectedSwapAmount","swap","Swap","SwapClient","AppInner","enqueueSnackbar","useSnackbar","params","setParams","isConnected","setIsConnected","preflightCommitment","network","Wallet","Connection","NotifyingProvider","tx","action","TokenListProvider","resolve","connect","on","textAlign","onTransaction","signers","txSig","this","App","left","bottom","maxSnack","autoHideDuration","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56596eb2.chunk.js","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\n\nexport const SRM_MINT = new PublicKey(\n  \"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\"\n);\n\nexport const USDC_MINT = new PublicKey(\n  \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\"\n);\n\nexport const USDT_MINT = new PublicKey(\n  \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\"\n);\n\nexport const DEX_PID = new PublicKey(\n  \"9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin\"\n);\n","import React, { useContext } from \"react\";\nimport { TokenListContainer, TokenInfo } from \"@solana/spl-token-registry\";\n\nconst _TokenListContext = React.createContext<null | TokenListContext>(null);\n\nexport function TokenListContextProvider(props: any) {\n  return (\n    <_TokenListContext.Provider value={{ tokenList: props.tokenList }}>\n      {props.children}\n    </_TokenListContext.Provider>\n  );\n}\n\ntype TokenListContext = {\n  tokenList: TokenListContainer;\n};\n\nexport function useTokenList(): TokenInfo[] {\n  const ctx = useContext(_TokenListContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx.tokenList.getList();\n}\n","import React, { useContext, useState, useEffect, useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { Swap as SwapClient } from \"@project-serum/swap\";\nimport {\n  Market,\n  OpenOrders,\n  Orderbook as OrderbookSide,\n} from \"@project-serum/serum\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { DEX_PID } from \"../../utils/pubkeys\";\nimport { useTokenList } from \"./TokenList\";\n\ntype DexContext = {\n  // Maps market address to open orders accounts.\n  openOrders: Map<string, Array<OpenOrders>>;\n  marketCache: Map<string, Market>;\n  setMarketCache: (c: Map<string, Market>) => void;\n  orderbookCache: Map<string, Orderbook>;\n  setOrderbookCache: (c: Map<string, Orderbook>) => void;\n  swapClient: SwapClient;\n};\nconst _DexContext = React.createContext<DexContext | null>(null);\n\nexport function DexContextProvider(props: any) {\n  const [ooAccounts, setOoAccounts] = useState<Map<string, Array<OpenOrders>>>(\n    new Map()\n  );\n  const [marketCache, setMarketCache] = useState<Map<string, Market>>(\n    new Map()\n  );\n  const [orderbookCache, setOrderbookCache] = useState<Map<string, Orderbook>>(\n    new Map()\n  );\n  const swapClient = props.swapClient;\n\n  // Two operations:\n  //\n  // 1. Fetch all open orders accounts for the connected wallet.\n  // 2. Batch fetch all market accounts for those open orders.\n  //\n  useEffect(() => {\n    OpenOrders.findForOwner(\n      swapClient.program.provider.connection,\n      swapClient.program.provider.wallet.publicKey,\n      DEX_PID\n    ).then(async (openOrders) => {\n      const newOoAccounts = new Map();\n      let markets = new Set<string>();\n      openOrders.forEach((oo) => {\n        markets.add(oo.market.toString());\n        if (newOoAccounts.get(oo.market.toString())) {\n          newOoAccounts.get(oo.market.toString()).push(oo);\n        } else {\n          newOoAccounts.set(oo.market.toString(), [oo]);\n        }\n      });\n      if (markets.size > 100) {\n        // Punt request chunking until there's user demand.\n        throw new Error(\n          \"Too many markets. Please file an issue to update this\"\n        );\n      }\n      const marketAccounts = (\n        await anchor.utils.getMultipleAccounts(\n          swapClient.program.provider.connection,\n          // @ts-ignore\n          [...markets].map((m) => new PublicKey(m))\n        )\n      ).map((programAccount) => {\n        return {\n          publicKey: programAccount?.publicKey,\n          account: new Market(\n            Market.getLayout(DEX_PID).decode(programAccount?.account.data),\n            -1, // Not used so don't bother fetching.\n            -1, // Not used so don't bother fetching.\n            swapClient.program.provider.opts,\n            DEX_PID\n          ),\n        };\n      });\n      setMarketCache((marketCache) => {\n        const newMarketCache = new Map(marketCache);\n        marketAccounts.forEach((m) => {\n          newMarketCache.set(m.publicKey!.toString(), m.account);\n        });\n        return newMarketCache;\n      });\n      setOoAccounts(newOoAccounts);\n    });\n  }, [\n    swapClient.program.provider.connection,\n    swapClient.program.provider.wallet.publicKey,\n    swapClient.program.provider.opts,\n  ]);\n  return (\n    <_DexContext.Provider\n      value={{\n        openOrders: ooAccounts,\n        marketCache,\n        setMarketCache,\n        orderbookCache,\n        setOrderbookCache,\n        swapClient,\n      }}\n    >\n      {props.children}\n    </_DexContext.Provider>\n  );\n}\n\nexport function useDexContext(): DexContext {\n  const ctx = useContext(_DexContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx;\n}\n\nexport function useOpenOrders(): Map<string, Array<OpenOrders>> {\n  const ctx = useDexContext();\n  return ctx.openOrders;\n}\n\n// Lazy load a given market.\nexport function useMarket(market?: PublicKey): Market | undefined {\n  const ctx = useDexContext();\n\n  const asyncMarket = useAsync(async () => {\n    if (!market) {\n      return undefined;\n    }\n    if (ctx.marketCache.get(market.toString())) {\n      return ctx.marketCache.get(market.toString());\n    }\n    const marketClient = await Market.load(\n      ctx.swapClient.program.provider.connection,\n      market,\n      undefined,\n      DEX_PID\n    );\n\n    let cache = new Map(ctx.marketCache);\n    cache.set(market.toString(), marketClient);\n    ctx.setMarketCache(cache);\n\n    return marketClient;\n  }, [ctx.swapClient.program.provider.connection, market]);\n\n  if (asyncMarket.result) {\n    return asyncMarket.result;\n  }\n\n  return undefined;\n}\n\n// Lazy load the orderbook for a given market.\nexport function useOrderbook(market?: PublicKey): Orderbook | undefined {\n  const { swapClient, orderbookCache, setOrderbookCache } = useDexContext();\n  const marketClient = useMarket(market);\n\n  const asyncOrderbook = useAsync(async () => {\n    if (!market || !marketClient) {\n      return undefined;\n    }\n    if (orderbookCache.get(market.toString())) {\n      return orderbookCache.get(market.toString());\n    }\n\n    const [bids, asks] = await Promise.all([\n      marketClient.loadBids(swapClient.program.provider.connection),\n      marketClient.loadAsks(swapClient.program.provider.connection),\n    ]);\n\n    const orderbook = {\n      bids,\n      asks,\n    };\n\n    const cache = new Map(orderbookCache);\n    cache.set(market.toString(), orderbook);\n    setOrderbookCache(cache);\n\n    return orderbook;\n  }, [swapClient.program.provider.connection, market, marketClient]);\n\n  if (asyncOrderbook.result) {\n    return asyncOrderbook.result;\n  }\n\n  return undefined;\n}\n\nexport function useMarketName(market: PublicKey): string {\n  const tokenList = useTokenList();\n  const marketClient = useMarket(market);\n  const baseTicker = tokenList\n    .filter((t) => t.address === marketClient?.baseMintAddress.toString())\n    .map((t) => t.symbol)[0];\n  const quoteTicker = tokenList\n    .filter((t) => t.address === marketClient?.quoteMintAddress.toString())\n    .map((t) => t.symbol)[0];\n  const name = `${baseTicker} / ${quoteTicker}`;\n  return name;\n}\n\n// Fair price for a given market, as defined by the mid.\nexport function useFair(market?: PublicKey): number | undefined {\n  const orderbook = useOrderbook(market);\n  if (orderbook === undefined) {\n    return undefined;\n  }\n  const bestBid = orderbook.bids.items(true).next().value;\n  const bestOffer = orderbook.asks.items(false).next().value;\n  const mid = (bestBid.price + bestOffer.price) / 2.0;\n  return mid;\n}\n\n// Fair price for a theoretical toMint/fromMint market. I.e., the number\n// of `fromMint` tokens to purchase a single `toMint` token. Aggregates\n// across a trade route, if needed.\nexport function useFairRoute(\n  fromMint: PublicKey,\n  toMint: PublicKey\n): number | undefined {\n  const { swapClient } = useDexContext();\n  const route = useMemo(\n    () => swapClient.route(fromMint, toMint),\n    [swapClient, fromMint, toMint]\n  );\n  const fromFair = useFair(route[0]);\n  const fromMarket = useMarket(route[0]);\n  const toFair = useFair(route[1]);\n\n  if (route.length === 1 && fromFair !== undefined) {\n    if (fromMarket === undefined) {\n      return undefined;\n    }\n    if (fromMarket?.baseMintAddress.equals(fromMint)) {\n      return 1.0 / fromFair;\n    } else {\n      return fromFair;\n    }\n  }\n  if (fromFair === undefined || toFair === undefined) {\n    return undefined;\n  }\n  return toFair / fromFair;\n}\n\ntype Orderbook = {\n  bids: OrderbookSide;\n  asks: OrderbookSide;\n};\n","import React, { useContext, useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { MintInfo } from \"@solana/spl-token\";\nimport { SRM_MINT, USDC_MINT } from \"../../utils/pubkeys\";\nimport { useFairRoute } from \"./Dex\";\n\nconst DEFAULT_SLIPPAGE_PERCENT = 0.5;\n\nexport type SwapContext = {\n  fromMint: PublicKey;\n  setFromMint: (m: PublicKey) => void;\n  toMint: PublicKey;\n  setToMint: (m: PublicKey) => void;\n  fromAmount: number;\n  setFromAmount: (a: number) => void;\n  toAmount: number;\n  setToAmount: (a: number) => void;\n  swapToFromMints: () => void;\n  fromMintAccount?: MintInfo;\n  toMintAccount?: MintInfo;\n  slippage: number;\n  setSlippage: (n: number) => void;\n  fairOverride: number | null;\n  setFairOverride: (n: number | null) => void;\n};\nconst _SwapContext = React.createContext<null | SwapContext>(null);\n\nexport function SwapContextProvider(props: any) {\n  const [fromMint, setFromMint] = useState(SRM_MINT);\n  const [toMint, setToMint] = useState(USDC_MINT);\n  const [fromAmount, _setFromAmount] = useState(0);\n  const [toAmount, _setToAmount] = useState(0);\n  // Percent units.\n  const [slippage, setSlippage] = useState(DEFAULT_SLIPPAGE_PERCENT);\n  const [fairOverride, setFairOverride] = useState<number | null>(null);\n  const fair = _useSwapFair(fromMint, toMint, fairOverride);\n\n  const swapToFromMints = () => {\n    const oldFrom = fromMint;\n    const oldFromAmount = fromAmount;\n    const oldTo = toMint;\n    const oldToAmount = toAmount;\n    setFromMint(oldTo);\n    setToMint(oldFrom);\n    _setFromAmount(oldToAmount);\n    _setToAmount(oldFromAmount);\n  };\n\n  const setFromAmount = (amount: number) => {\n    if (fair === undefined) {\n      throw new Error(\"Fair price not found\");\n    }\n    _setFromAmount(amount);\n    _setToAmount(amount / fair);\n  };\n\n  const setToAmount = (amount: number) => {\n    if (fair === undefined) {\n      throw new Error(\"Fair price not found\");\n    }\n    _setToAmount(amount);\n    _setFromAmount(amount * fair);\n  };\n\n  return (\n    <_SwapContext.Provider\n      value={{\n        fromMint,\n        setFromMint,\n        toMint,\n        setToMint,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        swapToFromMints,\n        slippage,\n        setSlippage,\n        fairOverride,\n        setFairOverride,\n      }}\n    >\n      {props.children}\n    </_SwapContext.Provider>\n  );\n}\n\nexport function useSwapContext(): SwapContext {\n  const ctx = useContext(_SwapContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx;\n}\n\nexport function useSwapFair(): number | undefined {\n  const { fairOverride, fromMint, toMint } = useSwapContext();\n  return _useSwapFair(fromMint, toMint, fairOverride);\n}\n\nfunction _useSwapFair(\n  fromMint: PublicKey,\n  toMint: PublicKey,\n  fairOverride: number | null\n): number | undefined {\n  const fairRoute = useFairRoute(fromMint, toMint);\n  const fair = fairOverride === null ? fairRoute : fairOverride;\n  return fair;\n}\n","import React, { useContext, useState } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { Provider } from \"@project-serum/anchor\";\nimport { PublicKey, Account } from \"@solana/web3.js\";\nimport { MintInfo, Token, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\n\nconst _MintContext = React.createContext<null | MintContext>(null);\ntype MintContext = {\n  mintCache: Map<string, MintInfo>;\n  setMintCache: (m: Map<string, MintInfo>) => void;\n  provider: Provider;\n};\n\nexport function MintContextProvider(props: any) {\n  const provider = props.provider;\n  const [mintCache, setMintCache] = useState(new Map<string, MintInfo>());\n\n  return (\n    <_MintContext.Provider\n      value={{\n        mintCache,\n        setMintCache,\n        provider,\n      }}\n    >\n      {props.children}\n    </_MintContext.Provider>\n  );\n}\n\nexport function useMint(mint?: PublicKey): MintInfo | undefined | null {\n  const ctx = useContext(_MintContext);\n  if (ctx === null) {\n    throw new Error(\"Mint context not found\");\n  }\n\n  // Lazy load the mint account if needeed.\n  const asyncMintInfo = useAsync(async () => {\n    if (!mint) {\n      return undefined;\n    }\n    if (ctx.mintCache.get(mint.toString())) {\n      return ctx.mintCache.get(mint.toString());\n    }\n    const mintClient = new Token(\n      ctx.provider.connection,\n      mint,\n      TOKEN_PROGRAM_ID,\n      new Account()\n    );\n    const mintInfo = await mintClient.getMintInfo();\n\n    let cache = new Map(ctx.mintCache);\n    cache.set(mint.toString(), mintInfo);\n    ctx.setMintCache(cache);\n\n    return mintInfo;\n  }, [ctx.provider.connection, mint]);\n\n  if (asyncMintInfo.result) {\n    return asyncMintInfo.result;\n  }\n  return undefined;\n}\n","// TODO: replace this whole file with something more modern. This is all copied\n//       from sollet.\n\nimport * as BufferLayout from \"buffer-layout\";\nimport { BN } from \"@project-serum/anchor\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\nimport * as bs58 from \"bs58\";\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey\n) {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest(\"getProgramAccounts\", [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      \"failed to get token accounts owned by \" +\n        publicKey.toBase58() +\n        \": \" +\n        resp.error.message\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }: any) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }: any) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    })\n    .map(({ publicKey, accountInfo }: any) => {\n      return { publicKey, account: parseTokenAccountData(accountInfo.data) };\n    });\n}\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, \"mint\"),\n  BufferLayout.blob(32, \"owner\"),\n  BufferLayout.nu64(\"amount\"),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8(\"decimals\"),\n  BufferLayout.blob(37),\n]);\n\nexport function parseTokenAccountData(data: Buffer) {\n  // @ts-ignore\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount: new BN(amount),\n  };\n}\n\nexport function parseMintData(data: Buffer) {\n  // @ts-ignore\n  let { decimals } = MINT_LAYOUT.decode(data);\n  return { decimals };\n}\n\nfunction getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        // @ts-ignore\n        offset: ACCOUNT_LAYOUT.offsetOf(\"owner\"),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { AccountInfo as TokenAccount } from \"@solana/spl-token\";\nimport { getOwnedTokenAccounts } from \"../../utils/tokens\";\n\nconst _TokenContext = React.createContext<TokenContext | null>(null);\n\nexport function TokenContextProvider(props: any) {\n  const provider = props.provider;\n  const [ownedTokenAccounts, setOwnedTokenAccounts] = useState(undefined);\n\n  // Fetch all the owned token accounts for the wallet.\n  useEffect(() => {\n    getOwnedTokenAccounts(provider.connection, provider.wallet.publicKey).then(\n      setOwnedTokenAccounts\n    );\n  }, [provider.wallet.publicKey, provider.connection]);\n\n  return (\n    <_TokenContext.Provider\n      value={{\n        ownedTokenAccounts,\n      }}\n    >\n      {props.children}\n    </_TokenContext.Provider>\n  );\n}\n\nexport type TokenContext = {\n  ownedTokenAccounts:\n    | { publicKey: PublicKey; account: TokenAccount }[]\n    | undefined;\n};\n\n// Null => none exists.\n// Undefined => loading.\nexport function useOwnedTokenAccount(\n  mint: PublicKey\n): { publicKey: PublicKey; account: TokenAccount } | null | undefined {\n  const ctx = useContext(_TokenContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  if (ctx.ownedTokenAccounts === undefined) {\n    return undefined;\n  }\n  const tokenAccounts = ctx.ownedTokenAccounts.filter((account) =>\n    account.account.mint.equals(mint)\n  );\n\n  if (tokenAccounts.length === 0) {\n    return null;\n  }\n\n  // Take the account with the most tokens in it.\n  tokenAccounts.sort((a, b) =>\n    a.account.amount < b.account.amount\n      ? -1\n      : a.account.amount > b.account.amount\n      ? 1\n      : 0\n  );\n  return tokenAccounts[0];\n}\n","import { useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport {\n  makeStyles,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  List,\n  ListItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { TokenIcon } from \"./Swap\";\nimport { useDexContext } from \"./context/Dex\";\nimport { useTokenList } from \"./context/TokenList\";\nimport { USDC_MINT, USDT_MINT } from \"../utils/pubkeys\";\n\nconst useStyles = makeStyles(() => ({\n  dialogContent: {\n    paddingTop: 0,\n  },\n  textField: {\n    width: \"100%\",\n    border: \"solid 1pt #ccc\",\n    borderRadius: \"10px\",\n    marginBottom: \"8px\",\n  },\n}));\n\nexport default function TokenDialog({\n  open,\n  onClose,\n  setMint,\n}: {\n  open: boolean;\n  onClose: () => void;\n  setMint: (mint: PublicKey) => void;\n}) {\n  const [tokenFilter, setTokenFilter] = useState(\"\");\n  const styles = useStyles();\n  const { swapClient } = useDexContext();\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        style: {\n          borderRadius: \"10px\",\n        },\n      }}\n    >\n      <div style={{ width: \"420px\" }}>\n        <DialogTitle style={{ fontWeight: \"bold\" }}>Select a token</DialogTitle>\n        <DialogContent className={styles.dialogContent}>\n          <TextField\n            className={styles.textField}\n            placeholder={\"Search name\"}\n            value={tokenFilter}\n            onChange={(e) => setTokenFilter(e.target.value)}\n            InputProps={{\n              disableUnderline: true,\n              style: { padding: \"10px\" },\n            }}\n          />\n          <div>\n            <List disablePadding>\n              {swapClient\n                .tokens()\n                .concat([USDC_MINT, USDT_MINT])\n                .map((mint) => (\n                  <TokenListItem\n                    key={mint.toString()}\n                    mint={mint}\n                    onClick={(mint) => {\n                      setMint(mint);\n                      onClose();\n                    }}\n                  />\n                ))}\n            </List>\n          </div>\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n}\n\nfunction TokenListItem({\n  mint,\n  onClick,\n}: {\n  mint: PublicKey;\n  onClick: (mint: PublicKey) => void;\n}) {\n  return (\n    <ListItem button onClick={() => onClick(mint)}>\n      <TokenIcon mint={mint} style={{ width: \"30px\", borderRadius: \"15px\" }} />\n      <TokenName mint={mint} />\n    </ListItem>\n  );\n}\n\nfunction TokenName({ mint }: { mint: PublicKey }) {\n  const tokenList = useTokenList();\n  let tokenInfo = tokenList.filter((t) => t.address === mint.toString())[0];\n  return (\n    <div style={{ marginLeft: \"16px\" }}>\n      <Typography style={{ fontWeight: \"bold\" }}>{tokenInfo.symbol}</Typography>\n      <Typography color=\"textSecondary\" style={{ fontSize: \"14px\" }}>\n        {tokenInfo.name}\n      </Typography>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { MintInfo } from \"@solana/spl-token\";\nimport { BN } from \"@project-serum/anchor\";\nimport { OpenOrders } from \"@project-serum/serum\";\nimport {\n  makeStyles,\n  Dialog,\n  DialogContent,\n  Paper,\n  Table,\n  TableRow,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableContainer,\n  Popover,\n  IconButton,\n  Typography,\n  Button,\n  Select,\n  MenuItem,\n  TextField,\n  InputAdornment,\n  Link,\n} from \"@material-ui/core\";\nimport { ToggleButton } from \"@material-ui/lab\";\nimport { SettingsOutlined as Settings, Close } from \"@material-ui/icons\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { useSwapContext, useSwapFair } from \"./context/Swap\";\nimport { useMarket, useOpenOrders } from \"./context/Dex\";\nimport { useTokenList } from \"./context/TokenList\";\nimport { useMint } from \"./context/Mint\";\n\nconst useStyles = makeStyles(() => ({\n  tab: {\n    width: \"50%\",\n  },\n  table: {},\n  settingsButton: {\n    padding: 0,\n  },\n}));\n\nexport function SettingsButton() {\n  const styles = useStyles();\n\n  return (\n    <PopupState variant=\"popover\">\n      {\n        //@ts-ignore\n        (popupState) => (\n          <div>\n            <IconButton\n              {...bindTrigger(popupState)}\n              className={styles.settingsButton}\n            >\n              <Settings />\n            </IconButton>\n            <Popover\n              {...bindPopover(popupState)}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              PaperProps={{ style: { borderRadius: \"10px\" } }}\n            >\n              <SettingsDetails />\n            </Popover>\n          </div>\n        )\n      }\n    </PopupState>\n  );\n}\n\nfunction SettingsDetails() {\n  const { slippage, setSlippage, fairOverride, setFairOverride } =\n    useSwapContext();\n  const [showSettingsDialog, setShowSettingsDialog] = useState(false);\n  const fair = useSwapFair();\n  return (\n    <div style={{ padding: \"15px\", width: \"305px\" }}>\n      <Typography color=\"textSecondary\" style={{ fontWeight: \"bold\" }}>\n        Settings\n      </Typography>\n      <div style={{ marginTop: \"10px\" }}>\n        <div>\n          <Typography color=\"textSecondary\">Slippage tolerance</Typography>\n          <TextField\n            type=\"number\"\n            placeholder=\"Error tolerance percentage\"\n            value={slippage}\n            onChange={(e) => setSlippage(parseFloat(e.target.value))}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n            }}\n          />\n        </div>\n        <div style={{ marginTop: \"5px\" }}>\n          <Typography color=\"textSecondary\">Fair price</Typography>\n          <div style={{ display: \"flex\" }}>\n            <TextField\n              type=\"number\"\n              placeholder=\"Fair price override\"\n              value={fair}\n              onChange={(e) => setFairOverride(parseFloat(e.target.value))}\n              style={{\n                marginRight: \"10px\",\n                flex: 1,\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n              }}\n              disabled={fairOverride === null}\n            />\n            <ToggleButton\n              selected={fairOverride === null}\n              onClick={() => {\n                if (fair === undefined) {\n                  console.error(\"Fair is undefined\");\n                  return;\n                }\n                if (fairOverride === null) {\n                  setFairOverride(fair);\n                } else {\n                  setFairOverride(null);\n                }\n              }}\n              style={{\n                paddingTop: \"3px\",\n                paddingBottom: \"3px\",\n                paddingLeft: \"5px\",\n                paddingRight: \"5px\",\n                borderRadius: \"20px\",\n              }}\n            >\n              Auto\n            </ToggleButton>\n          </div>\n        </div>\n        <Button\n          style={{\n            width: \"100%\",\n            marginTop: \"10px\",\n            background: \"#e0e0e0\",\n          }}\n          onClick={() => setShowSettingsDialog(true)}\n        >\n          Manage Dex Accounts\n        </Button>\n      </div>\n      <SettingsDialog\n        open={showSettingsDialog}\n        onClose={() => setShowSettingsDialog(false)}\n      />\n    </div>\n  );\n}\n\nexport function SettingsDialog({\n  open,\n  onClose,\n}: {\n  open: boolean;\n  onClose: () => void;\n}) {\n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        style: {\n          borderRadius: \"10px\",\n        },\n      }}\n    >\n      <div>\n        <div\n          style={{\n            height: \"24px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <IconButton\n            onClick={onClose}\n            style={{\n              padding: 0,\n              position: \"absolute\",\n              right: \"8px\",\n              top: \"8px\",\n            }}\n          >\n            <Close />\n          </IconButton>\n        </div>\n        <DialogContent style={{ paddingTop: 0 }}>\n          <OpenOrdersAccounts />\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n}\n\nfunction OpenOrdersAccounts() {\n  const styles = useStyles();\n  const openOrders = useOpenOrders();\n  return (\n    <TableContainer component={Paper} elevation={0}>\n      <Table className={styles.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Market</TableCell>\n            <TableCell align=\"center\">Open Orders Account</TableCell>\n            <TableCell align=\"center\">Base Used</TableCell>\n            <TableCell align=\"center\">Base Free</TableCell>\n            <TableCell align=\"center\">Quote Used</TableCell>\n            <TableCell align=\"center\">Quote Free</TableCell>\n            <TableCell align=\"center\">Settle</TableCell>\n            <TableCell align=\"center\">Close</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Array.from(openOrders.entries()).map(([market, oos]) => {\n            return (\n              <OpenOrdersRow\n                key={market}\n                market={new PublicKey(market)}\n                openOrders={oos}\n              />\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction OpenOrdersRow({\n  market,\n  openOrders,\n}: {\n  market: PublicKey;\n  openOrders: Array<OpenOrders>;\n}) {\n  const [ooAccount, setOoAccount] = useState(openOrders[0]);\n  const marketClient = useMarket(market);\n  const tokenList = useTokenList();\n  const base = useMint(marketClient?.baseMintAddress);\n  const quote = useMint(marketClient?.quoteMintAddress);\n  const baseTicker = tokenList\n    .filter((t) => t.address === marketClient?.baseMintAddress.toString())\n    .map((t) => t.symbol)[0];\n  const quoteTicker = tokenList\n    .filter((t) => t.address === marketClient?.quoteMintAddress.toString())\n    .map((t) => t.symbol)[0];\n  const marketName =\n    baseTicker && quoteTicker\n      ? `${baseTicker} / ${quoteTicker}`\n      : market.toString();\n  const settleDisabled =\n    ooAccount.baseTokenFree.toNumber() + ooAccount.quoteTokenFree.toNumber() ===\n    0;\n  const closeDisabled =\n    ooAccount.baseTokenTotal.toNumber() +\n      ooAccount.quoteTokenTotal.toNumber() !==\n    0;\n\n  const settleFunds = async () => {\n    // TODO.\n  };\n\n  const closeOpenOrders = async () => {\n    // TODO.\n    //\n    // Blocked by https://github.com/project-serum/serum-dex/pull/112.\n  };\n\n  return (\n    <TableRow key={market.toString()}>\n      <TableCell component=\"th\" scope=\"row\">\n        <Typography>\n          <Link\n            href={`https://dex.projectserum.com/#/market/${market.toString()}`}\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            {marketName}\n          </Link>\n        </Typography>\n      </TableCell>\n      <TableCell align=\"center\">\n        <Select\n          value={ooAccount.address.toString()}\n          onChange={(e) =>\n            setOoAccount(\n              openOrders.filter(\n                (oo) => oo.address.toString() === e.target.value\n              )[0]\n            )\n          }\n        >\n          {openOrders.map((oo) => {\n            return (\n              <MenuItem value={oo.address.toString()}>\n                {oo.address.toString()}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </TableCell>\n      <TableCell align=\"center\">\n        {toDisplay(base, ooAccount.baseTokenTotal.sub(ooAccount.baseTokenFree))}\n      </TableCell>\n      <TableCell align=\"center\">\n        {toDisplay(base, ooAccount.baseTokenFree)}\n      </TableCell>\n      <TableCell align=\"center\">\n        {toDisplay(\n          quote,\n          ooAccount.quoteTokenTotal.sub(ooAccount.quoteTokenFree)\n        )}\n      </TableCell>\n      <TableCell align=\"center\">\n        {toDisplay(quote, ooAccount.quoteTokenFree)}\n      </TableCell>\n      <TableCell align=\"center\">\n        <Button color=\"primary\" disabled={settleDisabled} onClick={settleFunds}>\n          Settle\n        </Button>\n      </TableCell>\n      <TableCell align=\"center\">\n        <Button\n          color=\"secondary\"\n          disabled={closeDisabled}\n          onClick={closeOpenOrders}\n        >\n          Close\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nfunction toDisplay(mintInfo: MintInfo | undefined | null, value: BN): string {\n  if (!mintInfo) {\n    return value.toNumber().toString();\n  }\n  return (value.toNumber() / 10 ** mintInfo.decimals).toFixed(\n    mintInfo.decimals\n  );\n}\n","import {\n  makeStyles,\n  Typography,\n  Link,\n  Popover,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Info } from \"@material-ui/icons\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { useTokenList } from \"./context/TokenList\";\nimport { useSwapContext, useSwapFair } from \"./context/Swap\";\nimport { useMint } from \"./context/Mint\";\nimport { useDexContext, useMarketName, useFair } from \"./context/Dex\";\n\nconst useStyles = makeStyles((theme) => ({\n  infoLabel: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: \"5px\",\n    marginRight: \"5px\",\n  },\n  fairPriceLabel: {\n    marginRight: \"10px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    color: theme.palette.text.secondary,\n  },\n  infoButton: {\n    padding: 0,\n  },\n}));\n\nexport function InfoLabel() {\n  const styles = useStyles();\n\n  const { fromMint, toMint } = useSwapContext();\n  const fromMintInfo = useMint(fromMint);\n  const fair = useSwapFair();\n\n  const tokenList = useTokenList();\n  let fromTokenInfo = tokenList.filter(\n    (t) => t.address === fromMint.toString()\n  )[0];\n  let toTokenInfo = tokenList.filter((t) => t.address === toMint.toString())[0];\n\n  return (\n    <div className={styles.infoLabel}>\n      <Typography color=\"textSecondary\"></Typography>\n      <div style={{ display: \"flex\" }}>\n        <div className={styles.fairPriceLabel}>\n          {fair !== undefined\n            ? `1 ${toTokenInfo.symbol} = ${fair.toFixed(\n                fromMintInfo?.decimals\n              )} ${fromTokenInfo.symbol}`\n            : `-`}\n        </div>\n        <InfoButton />\n      </div>\n    </div>\n  );\n}\n\nfunction InfoButton() {\n  const styles = useStyles();\n  return (\n    <PopupState variant=\"popover\">\n      {\n        //@ts-ignore\n        (popupState) => (\n          <div style={{ display: \"flex\" }}>\n            <IconButton\n              {...bindTrigger(popupState)}\n              className={styles.infoButton}\n            >\n              <Info />\n            </IconButton>\n            <Popover\n              {...bindPopover(popupState)}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              PaperProps={{ style: { borderRadius: \"10px\" } }}\n              disableRestoreFocus\n            >\n              <InfoDetails />\n            </Popover>\n          </div>\n        )\n      }\n    </PopupState>\n  );\n}\n\nfunction InfoDetails() {\n  const { fromMint, toMint } = useSwapContext();\n  const { swapClient } = useDexContext();\n  const tokenList = useTokenList();\n  const fromMintTicker = tokenList\n    .filter((t) => t.address === fromMint.toString())\n    .map((t) => t.symbol)[0];\n  const toMintTicker = tokenList\n    .filter((t) => t.address === toMint.toString())\n    .map((t) => t.symbol)[0];\n  const addresses = [\n    { ticker: fromMintTicker, mint: fromMint },\n    { ticker: toMintTicker, mint: toMint },\n  ];\n  return (\n    <div style={{ padding: \"15px\", width: \"250px\" }}>\n      <div>\n        <Typography\n          color=\"textSecondary\"\n          style={{ fontWeight: \"bold\", marginBottom: \"5px\" }}\n        >\n          Trade Route\n        </Typography>\n        {swapClient.route(fromMint, toMint).map((market: PublicKey) => {\n          return <MarketRoute key={market.toString()} market={market} />;\n        })}\n      </div>\n      <div style={{ marginTop: \"15px\" }}>\n        <Typography\n          color=\"textSecondary\"\n          style={{ fontWeight: \"bold\", marginBottom: \"5px\" }}\n        >\n          Tokens\n        </Typography>\n        {addresses.map((address) => {\n          return (\n            <div\n              key={address.mint.toString()}\n              style={{\n                marginTop: \"5px\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Link\n                href={`https://explorer.solana.com/address/${address.mint.toString()}`}\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                {address.ticker}\n              </Link>\n              <code style={{ width: \"128px\", overflow: \"hidden\" }}>\n                {address.mint.toString()}\n              </code>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction MarketRoute({ market }: { market: PublicKey }) {\n  const marketName = useMarketName(market);\n  const fair = useFair(market);\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: \"5px\",\n      }}\n    >\n      <Link\n        href={`https://dex.projectserum.com/#/market/${market.toString()}`}\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {marketName}\n      </Link>\n      <code style={{ marginLeft: \"10px\" }}>{fair ? fair.toFixed(6) : \"-\"}</code>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { TokenListContainer } from \"@solana/spl-token-registry\";\nimport { BN, Provider } from \"@project-serum/anchor\";\nimport { Swap as SwapClient } from \"@project-serum/swap\";\nimport {\n  makeStyles,\n  Card,\n  Button,\n  Paper,\n  Typography,\n  TextField,\n} from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport { SwapContextProvider, useSwapContext } from \"./context/Swap\";\nimport { DexContextProvider, useDexContext } from \"./context/Dex\";\nimport { MintContextProvider, useMint } from \"./context/Mint\";\nimport { TokenListContextProvider, useTokenList } from \"./context/TokenList\";\nimport { TokenContextProvider, useOwnedTokenAccount } from \"./context/Token\";\nimport TokenDialog from \"./TokenDialog\";\nimport { SettingsButton } from \"./Settings\";\nimport { InfoLabel } from \"./Info\";\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    width: \"450px\",\n    borderRadius: \"10px\",\n    border: \"solid 1pt #e0e0e0\",\n  },\n  cardContent: {\n    marginLeft: \"6px\",\n    marginRight: \"6px\",\n    marginBottom: \"6px\",\n  },\n  tab: {\n    width: \"50%\",\n  },\n  settingsButton: {\n    padding: 0,\n  },\n  swapButton: {\n    width: \"100%\",\n    borderRadius: \"15px\",\n  },\n  swapToFromButton: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n}));\n\nexport default function Swap({\n  style,\n  provider,\n  tokenList,\n}: {\n  style?: any;\n  provider: Provider;\n  tokenList: TokenListContainer;\n}) {\n  const swapClient = new SwapClient(provider, tokenList);\n  return (\n    <TokenListContextProvider tokenList={tokenList}>\n      <MintContextProvider provider={provider}>\n        <TokenContextProvider provider={provider}>\n          <DexContextProvider swapClient={swapClient}>\n            <SwapContextProvider>\n              <SwapCard style={style} />\n            </SwapContextProvider>\n          </DexContextProvider>\n        </TokenContextProvider>\n      </MintContextProvider>\n    </TokenListContextProvider>\n  );\n}\n\nfunction SwapCard({ style }: { style?: any }) {\n  const styles = useStyles();\n  return (\n    <div style={style}>\n      <Card className={styles.card}>\n        <SwapHeader />\n        <div className={styles.cardContent}>\n          <SwapFromForm />\n          <ArrowButton />\n          <SwapToForm />\n          <InfoLabel />\n          <SwapButton />\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nfunction SwapHeader() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        margin: \"8px\",\n      }}\n    >\n      <Typography\n        style={{\n          fontWeight: \"bold\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        Swap\n      </Typography>\n      <SettingsButton />\n    </div>\n  );\n}\n\nexport function ArrowButton() {\n  const styles = useStyles();\n  const { swapToFromMints } = useSwapContext();\n  return (\n    <Button className={styles.swapToFromButton} onClick={swapToFromMints}>\n      ⇅\n    </Button>\n  );\n}\n\nfunction SwapFromForm() {\n  const { fromMint, setFromMint, fromAmount, setFromAmount } = useSwapContext();\n  return (\n    <SwapTokenForm\n      mint={fromMint}\n      setMint={setFromMint}\n      amount={fromAmount}\n      setAmount={setFromAmount}\n    />\n  );\n}\n\nfunction SwapToForm() {\n  const { toMint, setToMint, toAmount, setToAmount } = useSwapContext();\n  return (\n    <SwapTokenForm\n      mint={toMint}\n      setMint={setToMint}\n      amount={toAmount}\n      setAmount={setToAmount}\n    />\n  );\n}\n\nfunction SwapTokenForm({\n  mint,\n  setMint,\n  amount,\n  setAmount,\n}: {\n  mint: PublicKey;\n  setMint: (m: PublicKey) => void;\n  amount: number;\n  setAmount: (a: number) => void;\n}) {\n  const [showTokenDialog, setShowTokenDialog] = useState(false);\n  const tokenAccount = useOwnedTokenAccount(mint);\n  const mintAccount = useMint(mint);\n\n  return (\n    <Paper elevation={0} variant=\"outlined\" style={{ borderRadius: \"10px\" }}>\n      <div\n        style={{\n          height: \"50px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TokenButton mint={mint} onClick={() => setShowTokenDialog(true)} />\n        <TextField\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(parseFloat(e.target.value))}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}\n        />\n      </div>\n      <div style={{ marginLeft: \"10px\", height: \"30px\" }}>\n        <Typography color=\"textSecondary\" style={{ fontSize: \"14px\" }}>\n          {tokenAccount && mintAccount\n            ? `Balance: ${(\n                tokenAccount.account.amount.toNumber() /\n                10 ** mintAccount.decimals\n              ).toFixed(mintAccount.decimals)}`\n            : `-`}\n        </Typography>\n      </div>\n      <TokenDialog\n        setMint={setMint}\n        open={showTokenDialog}\n        onClose={() => setShowTokenDialog(false)}\n      />\n    </Paper>\n  );\n}\n\nfunction TokenButton({\n  mint,\n  onClick,\n}: {\n  mint: PublicKey;\n  onClick: () => void;\n}) {\n  return (\n    <Button onClick={onClick} style={{ width: \"116px\" }}>\n      <TokenIcon mint={mint} style={{ width: \"25px\", borderRadius: \"13px\" }} />\n      <TokenName mint={mint} />\n      <ExpandMore />\n    </Button>\n  );\n}\n\nexport function TokenIcon({ mint, style }: { mint: PublicKey; style: any }) {\n  const tokenList = useTokenList();\n  let tokenInfo = tokenList.filter((t) => t.address === mint.toString())[0];\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      {tokenInfo.logoURI ? (\n        <img alt=\"token logo\" style={style} src={tokenInfo.logoURI} />\n      ) : (\n        <div style={style}></div>\n      )}\n    </div>\n  );\n}\n\nfunction TokenName({ mint }: { mint: PublicKey }) {\n  const tokenList = useTokenList();\n  let tokenInfo = tokenList.filter((t) => t.address === mint.toString())[0];\n  return (\n    <Typography style={{ marginLeft: \"5px\" }}>{tokenInfo.symbol}</Typography>\n  );\n}\n\nfunction SwapButton() {\n  const styles = useStyles();\n  const { fromMint, toMint, fromAmount, toAmount, slippage } = useSwapContext();\n  const { swapClient } = useDexContext();\n  const fromMintInfo = useMint(fromMint);\n  const toMintInfo = useMint(toMint);\n\n  const sendSwapTransaction = async () => {\n    if (!fromMintInfo || !toMintInfo) {\n      throw new Error(\"Unable to calculate mint decimals\");\n    }\n    const amount = new BN(fromAmount).muln(10 ** fromMintInfo.decimals);\n    const minExpectedSwapAmount = new BN(\n      (toAmount * (100 - slippage)) / 100\n    ).muln(10 ** toMintInfo.decimals);\n    await swapClient.swap({\n      fromMint,\n      toMint,\n      amount,\n      minExpectedSwapAmount,\n    });\n  };\n  return (\n    <Button\n      variant=\"contained\"\n      className={styles.swapButton}\n      onClick={sendSwapTransaction}\n    >\n      Swap\n    </Button>\n  );\n}\n","// The swap module exports a single `Swap` component that can be embedded into\n// applications.\n\nimport Swap from \"./components/Swap\";\nexport default Swap;\n","import { useState, useEffect } from \"react\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { Provider } from \"@project-serum/anchor\";\n// @ts-ignore\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {\n  Account,\n  ConfirmOptions,\n  Connection,\n  Transaction,\n  TransactionSignature,\n} from \"@solana/web3.js\";\nimport { TokenListProvider } from \"@solana/spl-token-registry\";\nimport Swap from \"./swap\";\nimport \"./App.css\";\n\n// App illustrating the use of the Swap component.\n//\n// One needs to just provide an Anchor `Provider` and a `TokenListContainer`\n// to the `Swap` component, and then everything else is taken care of.\nfunction App() {\n  return (\n    <div\n      style={{\n        width: \"450px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n        <AppInner />\n      </SnackbarProvider>\n    </div>\n  );\n}\n\nfunction AppInner() {\n  const { enqueueSnackbar } = useSnackbar();\n  const [params, setParams] = useState<any>(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Create the provider and token list.\n  useEffect(() => {\n    const opts: ConfirmOptions = {\n      preflightCommitment: \"recent\",\n      commitment: \"recent\",\n    };\n    const network = \"https://solana-api.projectserum.com\";\n    const wallet = new Wallet(\"https://www.sollet.io\", network);\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new NotifyingProvider(connection, wallet, opts, (tx) => {\n      enqueueSnackbar(\"Transaction sent\", {\n        variant: \"success\",\n        action: (\n          <Button\n            color=\"inherit\"\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            href={`https://explorer.solana.com/tx/${tx}`}\n          >\n            View on Solana Explorer\n          </Button>\n        ),\n      });\n    });\n    new TokenListProvider().resolve().then((tokenList) => {\n      setParams({\n        provider,\n        tokenList,\n      });\n      wallet.connect();\n    });\n  }, [enqueueSnackbar, setParams]);\n\n  // Connect to the wallet.\n  useEffect(() => {\n    if (params !== null) {\n      params.provider.wallet.on(\"connect\", () => {\n        setIsConnected(true);\n      });\n      params.provider.wallet.connect();\n    }\n  }, [params]);\n\n  return isConnected ? (\n    <Swap provider={params.provider} tokenList={params.tokenList} />\n  ) : (\n    <Typography style={{ textAlign: \"center\" }}>Disconnected</Typography>\n  );\n}\n\n// Custom provider to display notifications whenever a transaction is sent.\n//\n// Note that this is an Anchor wallet/network provider--not a React provider,\n// so all transactions will be flowing through here, which allows us to\n// hook in to display all transactions sent from the `Swap` component\n// as notifications in the parent app.\nclass NotifyingProvider extends Provider {\n  // Function to call whenever the provider sends a transaction;\n  private onTransaction: (tx: TransactionSignature) => void;\n\n  constructor(\n    connection: Connection,\n    wallet: Wallet,\n    opts: ConfirmOptions,\n    onTransaction: (tx: TransactionSignature) => void\n  ) {\n    super(connection, wallet, opts);\n    this.onTransaction = onTransaction;\n  }\n\n  async send(\n    tx: Transaction,\n    signers?: Array<Account | undefined>,\n    opts?: ConfirmOptions\n  ): Promise<TransactionSignature> {\n    // A production implementation should handle error notifications as well.\n    const txSig = await super.send(tx, signers, opts);\n    this.onTransaction(txSig);\n    return txSig;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}